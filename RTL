module uni_shi_rtl (
 
input wire clk, input wire reset_n,
input wire [1:0] select, input wire s_in,
input wire [3:0] p_in, output reg [3:0] p_out, output reg s_out
);
always @(posedge clk or negedge reset_n) begin if (!reset_n) begin
p_out <= 4'b0000; s_out <= 1'b0; end else begin case (select) 2'b00: begin
s_out <= p_out[3];
p_out <= {p_out[2:0], s_in}; end
2'b01: begin
p_out <= {p_out[2:0], s_in}; end
2'b10: begin p_out <= p_in; end
2'b11: begin
s_out <= p_out[0];
p_out <= {s_in, p_out[3:1]}; end

default: begin p_out <= p_out;
end endcase
end end
endmodule

